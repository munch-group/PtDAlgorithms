#!/usr/bin/env python
"""
Update registry.json with real IPFS CIDs.

Reads CIDs from /tmp/ipfs_cids.txt (generated by publish_traces_to_ipfs.sh)
and updates the registry.json file.

Usage:
    python scripts/update_registry_with_cids.py
"""

import json
from pathlib import Path
from datetime import datetime


def main():
    """Update registry with real IPFS CIDs."""

    # Read CID mappings
    cid_file = Path("/tmp/ipfs_cids.txt")
    if not cid_file.exists():
        print("Error: /tmp/ipfs_cids.txt not found")
        print("Run: bash scripts/publish_traces_to_ipfs.sh first")
        return 1

    print("Reading IPFS CIDs...")
    cid_mappings = {}

    for line in cid_file.read_text().strip().split('\n'):
        if not line:
            continue
        trace_id, dir_cid, trace_cid, metadata_cid = line.split('|')
        cid_mappings[trace_id] = {
            'dir_cid': dir_cid,
            'trace_cid': trace_cid,
            'metadata_cid': metadata_cid
        }

    print(f"Found {len(cid_mappings)} trace CID mappings")

    # Load registry
    registry_path = Path("/tmp/phasic-traces/registry.json")
    if not registry_path.exists():
        print(f"Error: Registry not found at {registry_path}")
        return 1

    print(f"Loading registry from {registry_path}")
    registry = json.loads(registry_path.read_text())

    # Update CIDs
    print("\nUpdating registry with real CIDs...")
    updated_count = 0

    for trace_id, cids in cid_mappings.items():
        if trace_id in registry['traces']:
            print(f"  Updating {trace_id}...")

            # Update directory CID
            registry['traces'][trace_id]['cid'] = cids['dir_cid']

            # Update file CIDs
            registry['traces'][trace_id]['files']['trace.json.gz']['cid'] = cids['trace_cid']
            registry['traces'][trace_id]['files']['metadata.json']['cid'] = cids['metadata_cid']

            # Remove mock CID note
            if 'note' in registry['traces'][trace_id]:
                del registry['traces'][trace_id]['note']

            updated_count += 1
        else:
            print(f"  Warning: {trace_id} not found in registry")

    # Update timestamp
    registry['updated'] = datetime.now().strftime('%Y-%m-%dT%H:%M:%SZ')

    # Save updated registry
    registry_path.write_text(json.dumps(registry, indent=2))

    print(f"\n✓ Updated {updated_count} traces with real IPFS CIDs")
    print(f"✓ Registry saved to {registry_path}")
    print("\nNext steps:")
    print("  cd /tmp/phasic-traces")
    print("  git add registry.json")
    print("  git commit -m 'Update with real IPFS CIDs'")
    print("  git push")

    return 0


if __name__ == "__main__":
    import sys
    sys.exit(main())
