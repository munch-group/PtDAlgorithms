project:
  type: website
  output-dir: _build
  # resources:
  # - objects.txt
  # - objects-test.txt

  # pre-render: generate-gallery.ts
  # # Hack to clean temporary file
  # # post-render:
  # #   - find galleries/ -name "gallery-styles.css" -delete




execute:
  freeze: auto
  echo: true

metadata-files:
  - api/_sidebar.yml

filters:
  - "interlinks"

interlinks:
  fast: true
  sources:
    python:
      url: https://docs.python.org/3/
    griffe:
      url: https://mkdocstrings.github.io/griffe/
    numpy:
      url: https://numpy.org/doc/stable/
    pandas:
      url: https://pandas.pydata.org/docs/
    matplotlib:
      url: https://matplotlib.org/stable/
    scipy:
      url: https://docs.scipy.org/doc/scipy/
    statsmodels:
      url: https://www.statsmodels.org/stable/ 
    jax:
      url: https://docs.jax.dev/en/latest/     
    # quartodoc-test:
    #   url: https://machow.github.io/quartodoc
    #   inv: objects-test.txt

website:
  # title: "phasic"
  title: ""
  page-navigation: true

  # announcement: 
  #   icon: exclamation-lg
  #   dismissable: true
  #   content: "**Alert** - this is some information that you should pay attention to"
  #   type: info
  #   position: above-navbar

  navbar:
    logo: logo.png
    logo-alt: "Phasic"  # For accessibility
    logo-href: "/index.html"  # Where clicking the logo goes

    left:
      - href: pages/getting_started.html
        text: Documentation
      - href: api/
        text: Python API reference
      - href: r_api/
        text: R API reference
      - href: c_api/
        text: C API reference
      # - file: examples/
      #   text: Examples
    right:
      - icon: github
        href: https://github.com/munch-group/phasic/
  sidebar:
    - id: pages
      title: Get Started
      style: floating
      align: left
      contents:
        - pages/getting_started.qmd
        - section: "Tutorials"
          contents:
            - pages/background/quickstart.qmd
            - pages/tutorials/rabbits_full_py_api_example.ipynb
            - pages/tutorials/coalescent_full_py_api_example.ipynb
            - pages/tutorials/state_space_construction.ipynb
        - section: "Bayesian inference"
          contents:
            - pages/svgd/svgd.ipynb
            - pages/svgd/caching.qmd
            - pages/svgd/svgd_trace_eval.qmd
            - pages/svgd/svgd_step_sizes.qmd
            - pages/svgd/ffi_and_openmp.qmd
        - section: "Distributed Computing"
          contents:
            - pages/distributed/distributed_computing_complete_guide.ipynb
            - pages/distributed/slurm_cluster_setup.ipynb
            - pages/distributed/cpu_monitoring.ipynb
        - section: "State space patterns"
          contents:
            - pages/modelling/state_lumping.ipynb
            - pages/modelling/laplace.ipynb
            - pages/modelling/epochs.ipynb
            - pages/modelling/joint_prob.ipynb
        - section: "Popgen examples"
          contents:
            - pages/modelling/coalescent-jointprob.ipynb
            - pages/popgen/isolation_migration.ipynb
            - pages/popgen/two-island-two-locus-arg.ipynb
            # - pages/
        - section: "Phase-type distributions"
          contents:
            - pages/background/math_and_alg.qmd
            - pages/tutorials/caching_guide.md
            - pages/tutorials/config_system.md
            - pages/tutorials/explicit_config_system.md

        - section: "Devel"
          contents:
            - pages/devel/architecture.qmd
            - href: https://github.com/munch-group/phasic/issues
              text: Issue Tracker
        # - galleries/examples/index.qmd
          

lightbox: true

format:
  html:
    grid:
      sidebar-width: 330px
      body-width: 900px
      margin-width: 270px
      gutter-width: 1.5rem
      # margin-left, margin-right, margin-top, margin-bottom

    theme: [cosmo, numpy.theme, custom.scss] # numpy.theme for code highlighting
    # theme: 
    #   light: [cosmo, numpy.theme]
    #   dark: [darkly, numpy-dark.theme]    
    css:
      - api/_styles-quartodoc.css
      - numpy.css  # for code box styles highlighting styles
      # - styles.css

      # - custom.css
      # - numpy-navbar-sidebar.css

    callout-icon: false
    code-overflow: wrap
    fig-align: center    
    html-math-method: katex
    toc: true
    mermaid:
      theme: neutral     
    linkcolor: "#0D7D92"

quartodoc:
  package: phasic
  # package: null
  # source_dir: ../src/cpp
  style: pkgdown
  dir: api
  dynamic: true  # Use runtime import for compiled extensions
  parser: numpy  # Use numpy docstring parser (more lenient)
  render_interlinks: true
  options:
    signature_name: full
    include_inherited: true
    include_empty: false  # Skip items that can't be loaded
  renderer:
    style: markdown
    table_style: description-list
  sidebar: "api/_sidebar.yml"
  css: "api/_styles-quartodoc.css"
  sections:
    - title: Graph Construction
      package: phasic
      desc: |
        Graph components (Vertex and Edge are documented as part of Graph)
      contents:
        - Graph
    - title: JAX-compatible utils
      package: phasic
      desc: |
        JAX-compatible phase-type distribution computations with FFI integration.
        Supports JIT compilation, automatic differentiation, and vmap/pmap parallelization.
      contents:
        - compute_pmf_ffi
        - compute_moments_ffi
        - compute_pmf_and_moments_ffi
    - title: Inference
      package: phasic
      desc: |
        SVGD
      contents:
        - SVGD
    - title: Distributed Computing
      package: phasic
      desc: |
        Multi-node distributed computing utilities for SLURM clusters.
        Simplifies scaling from single machine to 100+ nodes with automatic
        JAX distributed initialization and configuration management.
      contents:
        # - subtitle: "Distributed Initialization"
        #   desc: "Auto-detection and setup for multi-node computing"
        - DistributedConfig
        - initialize_distributed
        - detect_slurm_environment
        - get_coordinator_address
        - configure_jax_devices
        - initialize_jax_distributed
        # - subtitle: "Cluster Configuration"
        #   desc: "YAML-based cluster configuration management"
        - ClusterConfig
        - load_config
        - get_default_config
        - validate_config
        - suggest_config


    # - title: Some other section
    #   package: phasic
    #   desc: |
    #     Some description...
    #   contents:
    #     - scriptname


# quartodoc:
#   package: genominterv
#   style: pkgdown
#   dir: api
#   render_interlinks: true
#   options:
#     signature_name: full
#   renderer:
#     style: markdown
#     table_style: description-list
#   sidebar: "api/_sidebar.yml"
#   css: "api/_styles-quartodoc.css"

#   sections:
#     - title: Genomic set operations
#       package: genominterv
#       desc: |
#         Set operations on pandas.DataFrames with columns for chromosome, start, and end.
#       contents:
#         - interval_diff     
#         - interval_union   
#         - interval_intersect 
#         - interval_collapse
#     - title: Remapping
#       package: genominterv.remapping
#       desc: |
#         Mapping intervals relative to other coordinates.
#       contents:        
#         - interval_distance
#         - remap_interval_data
#     - title: Statistics
#       package: genominterv.stats
#       desc: Mapping intervals relative to other coordinates.
#       contents:
#         - proximity_test        
#         - jaccard_stat
#     - title: Decorators
#       package: genominterv.decorators
#       desc: |
#         Utilities for user created genomic intervals and bootstrap tests.
#       contents:
#         - genomic 
#         - bootstrap
#     - title: Interval set utilities
#       package: genominterv.interval_set_op
#       desc: |
#         Set operations on sorted lists of (start, end) tuples.
#       contents:
#         - union 
#         - diff
#         - invert
#         - intersect
#         - collapse
#     - title: Interval mapping utilities
#       package: genominterv.remapping
#       desc: |
#         Set operations on sorted lists of (start, end) tuples.
#       contents:
#         - remap 
