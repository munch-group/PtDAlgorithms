# Vertex { #phasic.Vertex }

```python
phasic.Vertex()
```



## Methods

| Name | Description |
| --- | --- |
| [add_edge](#phasic.Vertex.add_edge) | add_edge(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float) -> None |
| [add_edge_parameterized](#phasic.Vertex.add_edge_parameterized) | add_edge_parameterized(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float, edge_state: list[float]) -> None |
| [ae](#phasic.Vertex.ae) | ae(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float) -> None |
| [edges](#phasic.Vertex.edges) | edges(self: phasic.phasic_pybind.Vertex) -> list[phasic::Edge] |
| [index](#phasic.Vertex.index) | index(self: phasic.phasic_pybind.Vertex) -> int |
| [rate](#phasic.Vertex.rate) | rate(self: phasic.phasic_pybind.Vertex) -> float |
| [state](#phasic.Vertex.state) | state(self: phasic.phasic_pybind.Vertex) -> list[int] |

### add_edge { #phasic.Vertex.add_edge }

```python
phasic.Vertex.add_edge()
```

add_edge(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float) -> None


//' Adds an edge between two vertices in the graph
//' 
//' @description
//' The graph represents transitions between states as
//' a weighted direction edge between two vertices.
//' 
//' @seealso [phasic::expected_waiting_time()]
//' @seealso [phasic::moments()]
//' @seealso [phasic::variance()]
//' @seealso [phasic::covariance()]
//' @seealso [phasic::graph_update_weights_parameterized()]
//' 
//' @param phase_type_vertex_from The vertex that transitions from
//' @param phase_type_vertex_to The vertex that transitions to
//' @param weight The weight of the edge, i.e. the transition rate
//' @param parameterized_edge_state Optional. Associate a numeric vector to an edge, for faster computations of moments when weights are changed.
//' 
//' @examples
//' graph <- create_graph(4)
//' vertex_a <- find_or_create_vertex(graph, c(1,2,1,0))
//' vertex_b <- find_or_create_vertex(graph, c(2,0,1,0))
//' add_edge(vertex_a, vertex_b, 1.5)

### add_edge_parameterized { #phasic.Vertex.add_edge_parameterized }

```python
phasic.Vertex.add_edge_parameterized()
```

add_edge_parameterized(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float, edge_state: list[float]) -> None

### ae { #phasic.Vertex.ae }

```python
phasic.Vertex.ae()
```

ae(self: phasic.phasic_pybind.Vertex, to: phasic.phasic_pybind.Vertex, weight: float) -> None


Alias for add_edge

### edges { #phasic.Vertex.edges }

```python
phasic.Vertex.edges()
```

edges(self: phasic.phasic_pybind.Vertex) -> list[phasic::Edge]

### index { #phasic.Vertex.index }

```python
phasic.Vertex.index()
```

index(self: phasic.phasic_pybind.Vertex) -> int

### rate { #phasic.Vertex.rate }

```python
phasic.Vertex.rate()
```

rate(self: phasic.phasic_pybind.Vertex) -> float

### state { #phasic.Vertex.state }

```python
phasic.Vertex.state()
```

state(self: phasic.phasic_pybind.Vertex) -> list[int]