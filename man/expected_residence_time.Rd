% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{expected_residence_time}
\alias{expected_residence_time}
\title{Computes the expected residence time (or accumulated rewards) in each state}
\usage{
expected_residence_time(phase_type_graph, rewards = NULL)
}
\arguments{
\item{phase_type_graph}{A reference to the graph created by \code{\link[=create_graph]{create_graph()}}}

\item{rewards}{Optional rewards, which should be applied to the phase-type distribution. Must have length equal to \code{\link[=vertices_length]{vertices_length()}}}
}
\value{
A numeric vector where entry \code{i} is the expected waiting time starting at vertex \code{i}
}
\description{
bla bla bla bla
bla bla bla bla
bla bla bla bla
bla bla bla bla
}
\examples{
graph <- ptdalgorithms::create_graph(4)
v1 <- ptdalgorithms::create_vertex(graph, c(1,2,3,4))
v2 <- ptdalgorithms::create_vertex(graph, c(4,0,3,3))
a <- ptdalgorithms::create_vertex(graph, c(0,0,0,0))
ptdalgorithms::add_edge(ptdalgorithms::starting_vertex(graph), v1, 1)
ptdalgorithms::add_edge(v1, v2, 4)
ptdalgorithms::add_edge(v2, a, 10)
ptdalgorithms::expected_residence_time(graph) # =>
# c(0.35, 0.35, 0.10, 0)
# Rewards on absorbing and starting vertex has no effect
ptdalgorithms::expected_residence_time(graph, c(0, 2, 0, 0)) # =>
# c(0.5, 0.5, 0, 0)
ptdalgorithms::expected_residence_time(graph, c(9999, 2, 0, 9999)) # =>
# c(0.5, 0.5, 0, 0)
}
\seealso{
\code{\link[=moments]{moments()}}

\code{\link[=expectation]{expectation()}}

\code{\link[=variance]{variance()}}

\code{\link[=covariance]{covariance()}}
}
